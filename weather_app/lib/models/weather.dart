import 'package:weather_app/models/networking.dart';
import 'package:weather_app/models/location.dart';
import 'package:weather_app/utils/constants.dart';

class WeatherModel {
  Future<dynamic> getCityWeather(String cityName) async {
    var url =
        '$openWeatherMapURL?q=$cityName&appid=$apiKey&units=metric&lang=vi';
    NetworkHelper networkHelper = NetworkHelper(url: url);
    var weatherData = await networkHelper.getData();
    return weatherData;
  }

  Future<dynamic> getLocationWeather() async {
    Location location = Location();
    await location.GetCurrentLocation();

    var url =
        '$openWeatherMapURL?lat=${location.latitude}&lon=${location.longtitude}&appid=$apiKey&units=metric&lang=vi';
    NetworkHelper networkHelper = NetworkHelper(url: url);
    var weatherData = await networkHelper.getData();
    return weatherData;
  }

  String getWeatherIcon(int condition) {
    if (condition < 300) {
      return 'üå©';
    } else if (condition < 400) {
      return 'üåßÔ∏è';
    } else if (condition < 600) {
      return '‚òîÔ∏è';
    } else if (condition < 700) {
      return '‚òÉÔ∏è';
    } else if (condition < 800) {
      return 'üå´';
    } else if (condition == 800) {
      return '‚òÄÔ∏è';
    } else if (condition <= 804) {
      return '‚òÅÔ∏è';
    } else {
      return 'ü§∑‚Äç';
    }
  }

  String getMessage(int temp) {
    if (temp > 25) {
      return 'Th√≠ch h·ª£p ƒë·ªÉ ƒÉn üç¶ trong l√∫c n√†y';
    } else if (temp > 20) {
      return 'Th·ªùi ti·∫øt m√°t m·∫ª ‚òòÔ∏è';
    } else if (temp < 10) {
      return 'B·∫°n s·∫Ω c·∫ßn mang theo üß£ v√† üß§';
    } else {
      return 'Mang √°o üß• v√†o l√∫c n√†y';
    }
  }
}
